
program Fibonacci
   implicit none
    integer :: f1,f2,f3,i
    i = 1
    f1 = 0
    f2 = 1
    do
        f3 = f2 + f1
        f1 = f2
        f2 = f3
        i = i + 1
        if (f1<10) then
            print* ,'(I1, A, $)', f1, 
        else
            print* , '(I3, A, $)', f1, 
        end if
    end do
    print *, '...'
    end program Fibonacci
___

PROGRAM constants_and_variables
  IMPLICIT NONE
  REAL, PARAMETER :: pi = 3.14
  INTEGER :: a = 5
  PRINT*, a, pi, str
END PROGRAM constants_and_variables
__
PROGRAM assignments
  IMPLICIT NONE
  INTEGER :: a = 5
  REAL :: c = 2.5
  a = a + 2
  c = c * 3.0
  PRINT*, a, c
END PROGRAM assignments
__
PROGRAM in_out
  IMPLICIT NONE
  INTEGER :: n
  READ*, n
  n = n + 2
  PRINT*, n
  PRINT*, 'Your number:'
END PROGRAM in_out
__
PROGRAM if_statements
  IMPLICIT NONE
  INTEGER :: a = 5
  IF (a == 5) THEN
    PRINT*, 'a equals 5'
  ELSE
    PRINT*, 'a does not equal 5'
  END IF
END PROGRAM if_statements
__
PROGRAM do_loops
  IMPLICIT NONE
  INTEGER :: i
  DO i = 1, 10, 2
    PRINT*, i
  END DO
END PROGRAM do_loops
__
PROGRAM no_implicit_none
  INTEGER :: x = 5
END PROGRAM no_implicit_none
__
PROGRAM var_before_const
  IMPLICIT NONE
  INTEGER :: a = 5
  REAL, PARAMETER :: pi = 3.14
  a = a + pi
  PRINT*, a
END PROGRAM var_before_const
__
PROGRAM operator_precedence
  IMPLICIT NONE
  INTEGER :: a = 2
  INTEGER :: b = 3
  INTEGER :: c = 4
  INTEGER :: d = 5
  INTE GER :: x = 0
  x = a+b*c-d
  PRINT*, x
END PROGRAM operator_precedence
__
PROGRAM ronaldo
  INTEGER :: sui = 7
END PROGRAM messi


___OTHERS
PROGRAM constants_and_variables
  IMPLICIT NONE
  REAL, PARAMETER :: pi = 3.14
  INTEGER :: a = 5
  PRINT*, 'a', pi, str
END PROGRAM constants_and_variables 
_PASSED
PROGRAM lets_try
  IMPLICIT NONE
  INTEGER :: a = 2
  INTEGER :: b = 3
  INTEGER :: c = 4
  INTEGER :: d = 5
  INTEGER :: x = 0
  x = a+b*c-d
  if (x>22) then
  DO i = 1, 10, 2
    PRINT*, i
     if ( a>=0 ) then
      	e = a*b-s
      end if
  END DO
END PROGRAM lets_try
__

PROGRAM do_loops
  IMPLICIT NONE
  INTEGER :: i
  DO i = 1, 10, 2
    PRINT*, i
     if ( a>=0 ) then
	e = a*b-s*r-qqr*trf*fefe/ref+rew*r+x-e
      end if
  END DO
END PROGRAM do_loops 
_PASSED

PROGRAM lets_try2
  IMPLICIT NONE
  INTEGER :: a = 2
  INTEGER :: 2b = 3
  INTEGER :: c = 4
  INTEGER :: d = 5a
  INTEGER :: x = 0
  x = a+b*c-d ;
  if (x>==22) the
  DO i = 1, 10, 
    PRINT*, i
     if ( a>=0 ) then
      	e = a*b-s*r-qqr*trf*fefe/ref+rew*r+x-e
      end if
  END DO
END PROGRAM lets_try2

____
PROGRAM lets_try2
  IMPLICIT NONE
  INTEGER :: a = 2
  REAL :: b = 3.2
  INTEGER :: c = 4
  INTEGER :: d = 5
  INTEGER :: x = 0
  x = a+b*c-d ;
  if (x>==22) then
  DO i = 1, 10, 
    PRINT*, i
     if ( a>=0 ) then
      	e = a*b-s*r-qqr*trf*fefe/ref+rew*r+x-e
      end if
  END DO
END PROGRAM lets_try2

____


PROGRAM literal_stuff
  IMPLICIT NONE
  INTEGER :: a = 2
  REAL :: b = 3.2
  INTEGER :: c = 4
  Char :: d = "hi there!"
END PROGRAM literal_stuff
___
PROGRAM literal_stuff2
  IMPLICIT NONE
  INTEGER :: a = 2
  REAL :: b = 3.2
  INTEGER :: c = 4
  Character :: d = "hi there!"
END PROGRAM literal_stuff2

____
! A program to test comments and literals
! A program to test comments and literals
PROGRAM comments_stuff
  IMPLICIT NONE
  INTEGER :: a = 2
  REAL :: b = 3.2
  INTEGER :: c = 4
  Character :: d = "hi there!"
END PROGRAM comments_stuff




__
Program myTest
IMPLICIT NONE 

CHARACTER :: str = 'C'
CHARACTER (LEN = 4) :: strlong = 'abcd'
PRINT*, str
PRINT*, strlong

End Program myTest
__

Program myTest
IMPLICIT NONE 

CHARACTER (LEN = 4) :: str = 'abcd'
PRINT*, str

End Program myTest
__


Program FullTest
IMPLICIT NONE 

REAL, PARAMETER :: pi = 3.14
INTEGER, PARAMETER :: C = 3

REAL :: x = 5
INTEGER :: y = 0

y = x+x*x-x

IF (2<1) THEN
PRINT*, "IF is working"
ELSE
PRINT*, "ELSE is working"
END IF

DO i = 1,5,2
PRINT*, "DO is working", i
END DO 

READ*, y
PRINT*, y

End Program FullTest
__

program nestedIfProg
implicit none
   ! local variable declaration
   integer :: a = 100
 
   ! check the logical condition using if statement
   if( a == 100 ) then
  
   ! if condition is true then check the following 
      
   if( b == 200 ) then
  
   ! if inner if condition is true 
   print*, "Value of a is 100 and b is 200" 
  
   end if
   end if
   
   print*, "exact value of a is " ,  a
   print*, "exact value of b is " ,  b
 
end program nestedIfProg
_

__
program long_char_const_and_var
implicit none
   ! constants declirations
   character (len = 8) , parameter :: a = 'hello!'
   ! local variable declaration
   integer :: a = 100
   character :: a = 'h'
   character (len = 8) :: a = 'hello!'
      
   print*, "exact value of a is " ,  a
   print*, "exact value of b is " ,  b
end program long_char_const_and_var


__

EOF